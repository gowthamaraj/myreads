{"version":3,"sources":["shelf_one.js","shelf_two.js","shelf_three.js","bookapp.js","BooksAPI.js","search.js","App.js","index.js"],"names":["Shelf","className","this","props","currentlyReading","map","item","data","key","image","title","author","shelf","JSON","stringify","style","width","height","backgroundImage","onChange","handleChange","defaultValue","value","disabled","Component","wantToRead","read","BooksApp","to","React","api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","books","update","book","method","body","search","query","Search","state","change","e","setState","console","log","target","BooksAPI","items","forEach","imageLinks","authors","smallThumbnail","id","catch","error","parse","parentElement","getAttribute","updateAPI","type","placeholder","thumbnail","filter","path","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.795c7bad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Shelf extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {this.props.currentlyReading.map((item) => {\r\n                        let data= {key:item.key,image:item.image,title:item.title,author:item.author,shelf:\"currentlyReading\"};\r\n                        data = JSON.stringify(data);\r\n              return (\r\n                <li key={item.key} data={data}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${item.image})` }}></div>\r\n                      <div className=\"book-shelf-changer\">\r\n                        <select onChange={this.props.handleChange} defaultValue=\"currentlyReading\">\r\n                          <option value=\"move\" disabled>Move to...</option>\r\n                          <option value=\"currentlyReading\">Currently Reading</option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{item.title}</div>\r\n                    <div className=\"book-authors\">{item.author}</div>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Shelf;","import React,{Component} from 'react';\r\n\r\nclass Shelf extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                    {this.props.wantToRead.map((item) => {\r\n                        let data= {key:item.key,image:item.image,title:item.title,author:item.author,shelf:\"wantToRead\"};\r\n                        data = JSON.stringify(data);\r\n              return (\r\n                <li key={item.key} data={data}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${item.image})` }}></div>\r\n                      <div className=\"book-shelf-changer\">\r\n                        <select onChange={this.props.handleChange} defaultValue=\"wantToRead\">\r\n                          <option value=\"move\" disabled>Move to...</option>\r\n                          <option value=\"currentlyReading\">Currently Reading</option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{item.title}</div>\r\n                    <div className=\"book-authors\">{item.author}</div>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\nexport default Shelf;","import React, { Component } from 'react';\r\n\r\nclass Shelf extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">Read</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                    {this.props.read.map((item) => {\r\n                        let data= {key:item.key,image:item.image,title:item.title,author:item.author,shelf:\"read\"};\r\n                        data = JSON.stringify(data);\r\n              return (\r\n                <li key={item.key} data={data}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${item.image})` }}></div>\r\n                      <div className=\"book-shelf-changer\">\r\n                        <select onChange={this.props.handleChange} defaultValue=\"read\">\r\n                          <option value=\"move\" disabled>Move to...</option>\r\n                          <option value=\"currentlyReading\">Currently Reading</option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{item.title}</div>\r\n                    <div className=\"book-authors\">{item.author}</div>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shelf;","import React from 'react';\r\nimport ShelfOne from './shelf_one';\r\nimport ShelfTwo from './shelf_two';\r\nimport ShelfThree from './shelf_three';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass BooksApp extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n          <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n              <div>\r\n                <ShelfOne currentlyReading={this.props.currentlyReading} handleChange={this.props.handleChange}/>\r\n                <ShelfTwo wantToRead={this.props.wantToRead} handleChange={this.props.handleChange}/>\r\n                <ShelfThree read={this.props.read} handleChange={this.props.handleChange}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n            <Link to=\"/search\"><button>Add a book</button></Link>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.key}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as BooksAPI  from './BooksAPI';\r\nclass Search extends Component {\r\n\r\n    state ={\r\n        books:[]\r\n    }\r\n    change = (e)=>{ \r\n        this.setState({\r\n            books : []\r\n          });\r\n          console.log(e.target.value)\r\n        BooksAPI.search(e.target.value).then((data)=>{\r\n            let items =[]\r\n            data.forEach((data)=>{\r\n                if(data.imageLinks && data.authors){\r\n                    const item ={\r\n                        image:data.imageLinks.smallThumbnail,\r\n                        title:data.title,\r\n                        author:data.authors[0],\r\n                        key:data.id\r\n                      }\r\n                      items = [...items,item];\r\n                }\r\n              })\r\n              this.setState({\r\n                books : items\r\n              })\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n    update = (e) =>{\r\n        const data = JSON.parse(e.target.parentElement.parentElement.parentElement.parentElement.getAttribute(\"data\"));\r\n        BooksAPI.update(data,e.target.value).then((data)=>{\r\n            console.log(data);\r\n            this.props.updateAPI();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\"><button className=\"close-search\">Close</button></Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.change} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                    {this.state.books.map((item) => {\r\n                        let data= {key:item.key,image:item.image,title:item.title,author:item.author,shelf:\"new\"};\r\n                        data = JSON.stringify(data);\r\n              return (\r\n                <li key={Math.random()} data={data}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${item.image})` }}></div>\r\n                      <div className=\"book-shelf-changer\">\r\n                        <select onChange={this.update}>\r\n                          <option value=\"move\" disabled>Move to...</option>\r\n                          <option value=\"currentlyReading\">Currently Reading</option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{item.title}</div>\r\n                    <div className=\"book-authors\">{item.author}</div>\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react';\n// import * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport BookApp from './bookapp';\nimport { Route, Switch } from 'react-router-dom';\nimport Search from './search';\nimport * as BooksAPI  from './BooksAPI';\n\n\nclass BooksApp extends React.Component {\n  state = {\n    currentlyReading: [],\n    wantToRead: [],\n    read: []\n  }\n\n  updateAPI= (e) =>{\n    this.setState({\n      currentlyReading: [],\n      wantToRead: [],\n      read: []\n    })\n    BooksAPI.getAll().then((data)=>{\n      data.forEach((data)=>{\n        const item ={\n          image:data.imageLinks.thumbnail,\n          title:data.title,\n          author:data.authors[0],\n          key:data.id\n        }\n\n        this.setState({\n          [data.shelf] : [...this.state[data.shelf], item]\n        })\n      })\n  })\n  }\n  componentDidMount(){\n    this.updateAPI();\n  }\n  handleChange = (e) => {\n    const data = JSON.parse(e.target.parentElement.parentElement.parentElement.parentElement.getAttribute(\"data\"));\n    const { image, title, author, key, shelf } = data;\n    const target = e.target.value;\n    const item = {\n      image, title, author, key\n    };\n    BooksAPI.update(item,target).then((data)=>{\n      console.log(data);\n  });\n    if (target !== shelf) {\n      if (target === \"none\") {\n        this.setState({\n          [shelf]: this.state[shelf].filter((book) => {\n            return book.key !== key;\n          })\n        })\n        return\n      }\n      this.setState({\n        [target]: [...this.state[target], item],\n        [shelf]: this.state[shelf].filter((book) => {\n          return book.key !== key;\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/\" render={() => <BookApp currentlyReading={this.state.currentlyReading} wantToRead={this.state.wantToRead} read={this.state.read} handleChange={this.handleChange} />} exact />\n        <Route path=\"/search\" render={() => <Search updateAPI={this.updateAPI}/>} />\n      </Switch>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n    <App />\n        </BrowserRouter>\n    , document.getElementById('root')\n)\n"],"sourceRoot":""}